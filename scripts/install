#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE SETTINGS AND VARIABLES
#=================================================

# PostgreSQL configuration matching Jellystat defaults
postgres_user="jfstat"
postgres_password=$(ynh_string_random)
postgres_db="jfstat"

# Save the credentials in the app settings for reference
# Define default admin username and generate a secure password
js_user="admin"
js_password=$(ynh_string_random)
ynh_app_setting_set --key=js_user --value="$js_user"
ynh_app_setting_set --key=js_password --value="$js_password"

# Save PostgreSQL credentials as app settings for potential reuse
ynh_app_setting_set --key=postgres_user --value="$postgres_user"
ynh_app_setting_set --key=postgres_password --value="$postgres_password"
ynh_app_setting_set --key=postgres_db --value="$postgres_db"

# Other settings
app=$YNH_APP_INSTANCE_NAME
install_dir="/var/www/$app"
domain=$YNH_APP_ARG_DOMAIN
app_port=$(ynh_find_port --unused-only)
jwt_secret=$(ynh_string_random)

# Save app settings
ynh_app_setting_set --key=app_port --value="$app_port"
ynh_app_setting_set --key=jwt_secret --value="$jwt_secret"

#=================================================
# SET UP POSTGRESQL DATABASE
#=================================================

ynh_script_progression "Configuring PostgreSQL database..." 

# Set up PostgreSQL database and user
sudo -u postgres psql -c "CREATE USER $postgres_user WITH PASSWORD '$postgres_password';"
sudo -u postgres psql -c "ALTER USER $postgres_user CREATEDB;"
sudo -u postgres psql -c "CREATE DATABASE $postgres_db OWNER $postgres_user;"
ynh_psql_db_shell $postgres_db <<< "GRANT ALL PRIVILEGES ON DATABASE $postgres_db TO $postgres_user;"

#=================================================
# DOWNLOAD, CHECK, AND SET UP SOURCE
#=================================================

ynh_script_progression "Setting up source files..." 
ynh_setup_source --dest_dir="$install_dir" --source_id="main"

# Update create_database.js to use "IF NOT EXISTS"
sed -i "s|'CREATE DATABASE ' \\+ _POSTGRES_DATABASE|'CREATE DATABASE IF NOT EXISTS ${postgres_db};'|" "$install_dir/backend/create_database.js"

# Update swagger.json to set host as the domain
sed -i "s|\"host\": \"\"|\"host\": \"$domain\"|g" "$install_dir/backend/swagger.json"

# Update server.js to use the allocated port
sed -i "s/^const PORT = .*/const PORT = process.env.PORT || $app_port;/" "$install_dir/backend/server.js"

# Set up backupfolder according to source /classes/backup.js file
mkdir -p "$install_dir/backend/backup-data"
mkdir -p "$data_dir"
mkdir -p "$backup_dir"

#=================================================
# INSTALL NPM DEPENDENCIES AND BUILD
#=================================================
ynh_script_progression "Installing Node.js..." 
ynh_nodejs_install

ynh_script_progression "Installing and building app dependencies..." 
cd "$install_dir"
npm install
npm run build

#=================================================
# CONFIGURE ENVIRONMENT VARIABLES
#=================================================

ynh_script_progression "Configuring environment variables..." 
cat <<EOL > "$install_dir/.env"
POSTGRES_USER=$postgres_user
POSTGRES_PASSWORD=$postgres_password
POSTGRES_IP=127.0.0.1
POSTGRES_PORT=5432
POSTGRES_DB=$postgres_db
JS_USER=$js_user
JS_PASSWORD=$js_password
JWT_SECRET=$jwt_secret
PORT=$app_port
EOL

# Set appropriate permissions for the `.env` file
chmod 600 "$install_dir/.env"
chown "$app:$app" "$install_dir/.env"

# Set permissions for the entire install directory
chown -R "$app:$app" "$install_dir"

# Adjust permissions for web-accessible directories
chown -R "$app:www-data" "$install_dir/backend"
chown -R "$app:www-data" "$install_dir/dist"

# Adjust permissions for data
chown -R "$app:$app" "$data_dir"

#=================================================
# SET UP SYSTEMD SERVICE
#=================================================

ynh_script_progression "Setting up systemd service..." 
ynh_config_add_systemd

yunohost service add "$app" --description="Jellystat Service" --log="/var/log/$app/$app.log"
#=================================================
# SET UP NGINX
#=================================================

ynh_config_add_nginx

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service="$app" --action="start" --log_path="systemd" --timeout=30

#=================================================
# FINISH INSTALLATION
#=================================================

# Revoke the CREATEDB privilege after installation
ynh_psql_db_shell $postgres_db <<< "ALTER USER $postgres_user NOCREATEDB;"

ynh_script_progression "Installation of $app completed!" --last
