#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================
source _common.sh
source /usr/share/yunohost/helpers

# Retrieve database and user values from app setting
postgres_db=$(ynh_app_setting_get --app=$app --key=postgres_db)
postgres_user=$(ynh_app_setting_get --app=$app --key=postgres_user)

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action="stop"

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Installing dependencies..."

# Check if the current Node.js version matches the required version
current_nodejs_version=$(ynh_app_setting_get --app=$app --key=nodejs_version)
required_nodejs_version=$nodejs_version  # From _common.sh

if [ "$current_nodejs_version" != "$required_nodejs_version" ]; then
    ynh_script_progression "Upgrading Node.js from version $current_nodejs_version to $required_nodejs_version..."

    # Remove the old Node.js version
    ynh_nodejs_remove

    # Explicitly redefine nodejs_version for the new installation
    export nodejs_version=$required_nodejs_version  # Ensure the correct version is used
    ynh_nodejs_install

    # Save the new Node.js version in app settings
    ynh_app_setting_set --app=$app --key=nodejs_version --value=$required_nodejs_version
else
    ynh_script_progression "Node.js is already at version $required_nodejs_version."
    ynh_nodejs_install
fi

#=================================================
# DOWNLOAD, CHECK AND DEPLOY NEW SOURCES
#=================================================
ynh_script_progression "Setting up source files..."

# Download, check integrity, uncompress, and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir" --full_replace --keep=".env"

#=================================================
# EDIT CRUCIAL FILES
#=================================================
ynh_script_progression "Updating critical files..."

# Update create_database.js for PostgreSQL compatibility
ynh_replace --match="'CREATE DATABASE ' \\+ _POSTGRES_DATABASE" --replace="'CREATE DATABASE IF NOT EXISTS ${postgres_db};'" --file="$install_dir/backend/create_database.js"

# Update server.js to use the allocated port
ynh_replace --match="^const PORT = .*" --replace="const PORT = process.env.PORT || $port;" --file="$install_dir/backend/server.js"

# Set up backupfolder according to source /classes/backup.js file
mkdir -p "$backup_dir"
mkdir -p "$backup_data"

#=================================================
# BUILD THE APP
#=================================================
ynh_script_progression "Building app... This may take some time"

cd "$install_dir"
ynh_hide_warnings npm install
npm run build

#=================================================
# CONFIGURE ENVIRONMENT VARIABLES
#=================================================

ynh_script_progression "Configuring environment variables..." 

# Set permissions for the entire install directory
chown -R "$app:$app" "$install_dir"

# Adjust permissions for web-accessible directories
chown -R "$app:www-data" "$install_dir/dist"

#=================================================
# CONFIGURE SYSTEMD SERVICE
#=================================================
ynh_script_progression "Configuring $app's systemd service..."

# Create a dedicated systemd config
yunohost service add "$app" --description="Jellystat statistics service"
ynh_config_add_systemd

#=================================================
# GRANT PERM FOR DB USER
#=================================================
ynh_script_progression "Grant db permissions for $app..."

ynh_psql_db_shell postgres <<< "ALTER USER $postgres_user CREATEDB;"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service="$app" --action="start" --log_path="systemd" --timeout=30

#=================================================
# END OF SCRIPT
#=================================================
ynh_psql_db_shell postgres <<< "ALTER USER $postgres_user NOCREATEDB;"

ynh_script_progression "Upgrade of $app completed successfully!"
