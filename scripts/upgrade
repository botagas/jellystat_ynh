#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================
source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE SETTINGS AND VARIABLES
#=================================================
app_port=$(ynh_find_port --unused-only)
postgres_user="jfstat"
postgres_password=$(ynh_string_random)
postgres_db="jfstat"
js_user="admin"
js_password=$(ynh_string_random)
jwt_secret=$(ynh_string_random)

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action="stop"

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Installing dependencies..."

# Check if the current Node.js version matches the required version
current_nodejs_version=$(ynh_app_setting_get --app=$app --key=nodejs_version)
required_nodejs_version=$nodejs_version  # From _common.sh

if [ "$current_nodejs_version" != "$required_nodejs_version" ]; then
    ynh_script_progression "Upgrading Node.js from version $current_nodejs_version to $required_nodejs_version..."

    # Remove the old Node.js version
    ynh_nodejs_remove

    # Explicitly redefine nodejs_version for the new installation
    export nodejs_version=$required_nodejs_version  # Ensure the correct version is used
    ynh_nodejs_install

    # Save the new Node.js version in app settings
    ynh_app_setting_set --app=$app --key=nodejs_version --value=$required_nodejs_version
else
    ynh_script_progression "Node.js is already at version $required_nodejs_version."
    ynh_nodejs_install
fi

#=================================================
# DOWNLOAD, CHECK AND DEPLOY NEW SOURCES
#=================================================
ynh_script_progression "Setting up source files..."

# Download, check integrity, uncompress, and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir" --full_replace --keep="config"

#=================================================
# EDIT CRUCIAL FILES
#=================================================
ynh_script_progression "Updating critical files..."

# Update swagger.json to set the host as the domain
sed -i "s|\"host\": \"\"|\"host\": \"$domain\"|g" "$install_dir/backend/swagger.json"

# Update create_database.js for PostgreSQL compatibility
sed -i "s|'CREATE DATABASE ' \+ _POSTGRES_DATABASE|'CREATE DATABASE IF NOT EXISTS ${postgres_db};'|" "$install_dir/backend/create_database.js"

# Update server.js to use the allocated port
sed -i "s/^const PORT = .*/const PORT = process.env.PORT || $app_port;/" "$install_dir/backend/server.js"

#=================================================
# BUILD THE APP
#=================================================
ynh_script_progression "Building app... This may take some time"

cd "$install_dir"
npm install
npm run build

#=================================================
# CONFIGURE ENVIRONMENT VARIABLES
#=================================================

ynh_script_progression "Configuring environment variables..." 
cat <<EOL > "$install_dir/.env"
POSTGRES_USER=$postgres_user
POSTGRES_PASSWORD=$postgres_password
POSTGRES_IP=127.0.0.1
POSTGRES_PORT=5432
POSTGRES_DB=$postgres_db
JS_USER=$js_user
JS_PASSWORD=$js_password
JWT_SECRET=$jwt_secret
PORT=$app_port
EOL

# Set permissions for the entire install directory
chown -R "$app:$app" "$install_dir"

# Set perms for env
chmod 600 "$install_dir/.env"
chown "$app:$app" "$install_dir/.env"

# Adjust permissions for web-accessible directories
chown -R "$app:www-data" "$install_dir/backend"
chown -R "$app:www-data" "$install_dir/dist"

#=================================================
# CONFIGURE SYSTEMD SERVICE
#=================================================
ynh_script_progression "Configuring $app's systemd service..."

# Create a dedicated systemd config
ynh_config_add_systemd

#=================================================
# ADD SERVICE IN YUNOHOST
#=================================================
ynh_script_progression "Adding service in YunoHost..."

sudo -u postgres psql -c "ALTER USER $postgres_user CREATEDB;"

yunohost service add "$app" --description="Jellystat Service" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service="$app" --action="start" --log_path="systemd" --timeout=30

#=================================================
# END OF SCRIPT
#=================================================
ynh_psql_db_shell $postgres_db <<< "ALTER USER $postgres_user NOCREATEDB;"

ynh_script_progression "Upgrade of $app completed successfully!"
