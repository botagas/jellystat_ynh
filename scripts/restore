#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

# Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

# postgres_db=$(ynh_app_setting_get --app=$app --key=postgres_db)
# postgres_user=$(ynh_app_setting_get --app=$app --key=postgres_user)

#=================================================
# RESTORE THE APP MAIN DIRECTORY
#=================================================
ynh_script_progression "Restoring the app main directory..."

ynh_restore "$install_dir"
ynh_restore "$data_dir"

# Retrieve database and user values from the .env file
postgres_db=$(grep POSTGRES_DB "$install_dir/.env" | cut -d '=' -f 2)
postgres_user=$(grep POSTGRES_USER "$install_dir/.env" | cut -d '=' -f 2)
# Print the retrieved values for debugging
ynh_print_warn "Restoring database with the following details:"
ynh_print_warn "Database Name: $postgres_db"
ynh_print_warn "Database User: $postgres_user"

#=================================================
# RESTORE ENVIRONMENT VARIABLES
#=================================================
ynh_script_progression "Restoring the environment variables file..."

# Set permissions for the .env file, if present
chmod 600 "$install_dir/.env"
chown "$app:$app" "$install_dir/.env"

# Set permissions for data_dir
chown "$app:$app" "$data_dir"

# Set permissions for the entire install directory
chown -R "$app:$app" "$install_dir"

# Adjust permissions for web-accessible directories
chown -R "$app:www-data" "$install_dir/dist"

#=================================================
# RESTORE SYSTEMD SERVICE
#=================================================
ynh_script_progression "Restoring the systemd service..."

ynh_restore "/etc/systemd/system/$app.service"
systemctl enable "$app.service" --quiet

#=================================================
# RESTORE NGINX CONFIGURATION
#=================================================
ynh_script_progression "Restoring the NGINX configuration..."

ynh_restore "/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# RESTORE DATABASE
#=================================================
ynh_print_info "Restoring the PostgreSQL database..."

# Verify if the database dump exists in the backup directory
if [ -f "$backup_data/db.sql" ]; then
    # Drop the existing database and user if they exist
    ynh_psql_db_shell postgres <<< "DROP DATABASE IF EXISTS $postgres_db;"
    ynh_psql_db_shell postgres <<< "DROP USER IF EXISTS $postgres_user;"

    # Recreate the user
    ynh_psql_db_shell postgres <<< "CREATE USER $postgres_user WITH PASSWORD '$postgres_password';"
    ynh_print_info "Providing sufficient rights to db user to create db if none is present..."
    ynh_psql_db_shell postgres <<< "ALTER USER $postgres_user CREATEDB;"

    # Recreate the database
    ynh_psql_db_shell postgres <<< "CREATE DATABASE $postgres_db OWNER $postgres_user;"
    ynh_psql_db_shell postgres <<< "GRANT ALL PRIVILEGES ON DATABASE $postgres_db TO $postgres_user;"

    # Restore the dump into the newly created database
    ynh_psql_db_shell $postgres_db < "$backup_data/db.sql"
else
    ynh_print_warn "No db dump file found in the backup directory. Was the DB not backed up previously?"
    ynh_print_warn "Due to missing db file, the db will have been created anew..."
    ynh_print_info "Proceeding with restoration without db file..."
fi


#=================================================
# REINSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Reinstalling dependencies..."

ynh_nodejs_install

#=================================================
# ADD SERVICE IN YUNOHOST
#=================================================
ynh_script_progression "Adding service in YunoHost..."

yunohost service add "$app" --description="Jellystat Service"

#=================================================
# RELOAD AND START SERVICES
#=================================================
ynh_script_progression "Reloading and starting services..."

ynh_systemctl --service="$app" --action="start" --log_path="systemd" --timeout=30
ynh_systemctl --service=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================
ynh_psql_db_shell $postgres_db <<< "ALTER USER $postgres_user NOCREATEDB;"
ynh_script_progression "Restoration completed for $app"
